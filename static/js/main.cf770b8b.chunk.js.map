{"version":3,"sources":["components/Header.js","components/Button.js","components/Timer.js","components/Background.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","backgroundColor","padding","textAlign","color","Button","props","type","onClick","OnClick","fontSize","margin","cursor","borderRadius","border","bground","children","Timer","changeBG","useState","counter","setCounter","myIntervalID","setIntervalID","useEffect","Math","floor","random","width","display","flexDirection","alignItems","marginBottom","intervalID","setInterval","console","log","clearInterval","Background","colorIndex","setColorIndex","mystyle","height","justifyContent","index","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAUeA,EARA,WACX,OACI,wBAAQC,MAAO,CAACC,gBAAgB,UAAWC,QAAQ,OAAOC,UAAU,UAApE,SACE,oBAAIH,MAAO,CAACI,MAAM,SAAlB,0B,OCGKC,EANA,SAACC,GACZ,OAAO,wBAAQC,KAAK,SAASC,QAAWF,EAAMG,QAAST,MAAO,CAACI,MAAM,OAAOF,QAAQ,MAAOQ,SAAS,OAAOC,OAAO,MAAMC,OAAO,UAAUC,aAAa,MAAMC,OAAO,OAAOb,gBAAgB,GAAD,OAAIK,EAAMS,UAA5L,SACFT,EAAMU,YCoCAC,EAtCD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAGZ,EAA2BC,mBAAS,GAApC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAuCF,mBAAS,GAAhD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WAEHJ,EAAU,KAAO,GAEpBF,EAASO,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,KAE3C,CAACP,EAAQF,IAeX,OACI,sBAAKlB,MAAO,CAACc,OAAQ,kBAAmBZ,QAAQ,OAAQ0B,MAAM,MAAMC,QAAQ,OAAOC,cAAc,SAAUC,WAAW,UAAtH,UACI,qBAAI/B,MAAO,CAACU,SAAU,OAAOsB,aAAa,QAA1C,UAAoDZ,EAApD,UACA,gCACA,cAAC,EAAD,CAAQX,QAfE,WACjB,IAAIwB,EAAaC,aAAY,WACzBb,EAAWD,OACb,KACCG,EAAcU,IAWmBlB,QAAU,UAAvC,mBACA,cAAC,EAAD,CAAQN,QATE,WACd0B,QAAQC,IAAId,GACZe,cAAcf,IAOoBP,QAAU,UAAxC,yBCNGuB,EA1BI,WAEf,IACA,EAAmCnB,mBAAS,GAA5C,mBAAOoB,EAAP,KAAkBC,EAAlB,KAMMC,EAAU,CACZC,OAAQ,QACRb,QAAQ,OACRc,eAAe,SACfZ,WAAW,SACX9B,gBAAgB,GAAD,OAZJ,CAAC,OAAO,MAAM,QAAQ,UAAU,QAAQ,UAAU,SAYlCsC,KAE/B,OACI,qBAAKvC,MAAOyC,EAAZ,SACI,cAAC,EAAD,CAAOvB,SAbS,SAAC0B,GAErBJ,EAAcI,S,MCSPC,MAbf,WAKE,OACE,sBAAKC,UAAU,MAAf,UACD,cAAC,EAAD,IACA,cAAC,EAAD,QCDYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cf770b8b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header style={{backgroundColor:\"#333333\" ,padding:\"10px\",textAlign:\"center\" }}>\r\n          <h1 style={{color:\"#ffff\"}}>Timer App</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return <button type=\"button\" onClick = {props.OnClick} style={{color:\"#fff\",padding:\"5px\", fontSize:\"20px\",margin:\"5px\",cursor:\"pointer\",borderRadius:\"5px\",border:\"none\",backgroundColor:`${props.bground}`}}>\r\n        {props.children}\r\n    </button>\r\n}\r\n\r\nexport default Button\r\n","import React,{useState,useEffect} from 'react';\r\nimport Button from './Button';\r\nconst Timer = ({changeBG}) => {\r\n    \r\n   \r\n    let [counter,setCounter] = useState(0);\r\n    const [myIntervalID , setIntervalID] = useState(0);\r\n\r\n    useEffect(()=>{\r\n      \r\n        if(counter % 10 === 0){\r\n       \r\n        changeBG(Math.floor(Math.random() * 6) + 1)\r\n        }\r\n    },[counter,changeBG]);\r\n\r\n\r\n\r\n    const startTimer =()=> {\r\n     let intervalID = setInterval(()=>{\r\n         setCounter(counter++);\r\n     },1000);\r\n        setIntervalID(intervalID);\r\n    }\r\n\r\n    const StopTimer = () => {\r\n        console.log(myIntervalID);\r\n        clearInterval(myIntervalID);\r\n    }\r\n    return (\r\n        <div style={{border: \"1px solid green\", padding:\"10px\" ,width:\"50%\",display:\"flex\",flexDirection:\"column\" ,alignItems:\"center\"}}>\r\n            <h1 style={{fontSize :\"80px\",marginBottom:\"10px\"}}>{counter} Sec</h1>\r\n            <div>\r\n            <Button OnClick={startTimer} bground = \"#5cb85c\">START</Button>\r\n            <Button OnClick = {StopTimer} bground = \"#d9534f\">STOP</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React,{useState} from 'react'\r\nimport Timer from './Timer';\r\nconst Background = () => {\r\n\r\n    const colors = [\"#fff\",\"red\",\"green\",\"#f2f2f2\",\"#3333\",\"#f4f4f4\",\"#eeee\"];\r\n    const [colorIndex,setColorIndex] = useState(0);\r\n\r\n    const bgChangeToggler = (index) => {\r\n   \r\n        setColorIndex(index);\r\n    }\r\n    const mystyle = {\r\n        height: \"100vh\",\r\n        display:\"flex\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: `${colors[colorIndex]}`\r\n    }\r\n    return (\r\n        <div style={mystyle}>\r\n            <Timer changeBG= {bgChangeToggler} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Background\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Background from './components/Background';\nimport './App.css';\n\nfunction App() {\n\n\n\n  \n  return (\n    <div className=\"App\">\n   <Header />\n   <Background/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}